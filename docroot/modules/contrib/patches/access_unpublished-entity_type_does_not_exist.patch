diff --git a/src/Access/LatestRevisionCheck.php b/src/Access/LatestRevisionCheck.php
index d92c8056ec..d5369df373 100644
--- a/src/Access/LatestRevisionCheck.php
+++ b/src/Access/LatestRevisionCheck.php
@@ -13,7 +13,7 @@
 /**
  * Access check for the entity moderation tab which supports access_unpublished.
  */
-class LatestRevisionCheck extends ContentModerationLatestRevisionCheck {
+class LatestRevisionCheck implements AccessInterface {

   /**
    * The decorated access check.
diff --git a/src/Access/LatestRevisionCheck.php b/src/Access/LatestRevisionCheck.php
index ae0921a..245a7bf 100644
--- a/src/Access/LatestRevisionCheck.php
+++ b/src/Access/LatestRevisionCheck.php
@@ -70,15 +70,22 @@
    * @throws \Drupal\Core\Access\AccessException
    *   An AccessException is thrown if the entity couldn't be loaded.
    */
-  protected function loadEntity(Route $route, RouteMatchInterface $route_match) {
-    $entity_type = $route->getOption('_content_moderation_entity_type');
-
-    if ($entity = $route_match->getParameter($entity_type)) {
-      if ($entity instanceof EntityInterface) {
-        return $entity;
-      }
-    }
-    throw new AccessException(sprintf('%s is not a valid entity route. The LatestRevisionCheck access checker may only be used with a route that has a single entity parameter.', $route_match->getRouteName()));
+  protected function loadEntity(Route $route, RouteMatchInterface $route_match) {
+    if (\Drupal::moduleHandler()->moduleExists('content_moderation')) {
+      $entity_type = $route->getOption('_content_moderation_entity_type');
+    } elseif (\Drupal::moduleHandler()->moduleExists('workbench_moderation')) {
+      $entity_type = $route->getOption('_workbench_moderation_entity_type');
+    } else {
+      $entity_type = 'node';
+    }
+
+
+    if ($entity = $route_match->getParameter($entity_type)) {
+      if ($entity instanceof EntityInterface) {
+        return $entity;
+      }
+    }
+    throw new AccessException(sprintf('%s is not a valid entity route. The LatestRevisionCheck access checker may only be used with a route that has a single entity parameter.', $route_match->getRouteName()));
   }

 }

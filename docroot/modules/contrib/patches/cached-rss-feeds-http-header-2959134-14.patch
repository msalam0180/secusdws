diff --git a/core/modules/node/tests/src/Functional/NodeRSSContentTest.php b/core/modules/node/tests/src/Functional/NodeRSSContentTest.php
index 0efa336..bf183de 100644
--- a/core/modules/node/tests/src/Functional/NodeRSSContentTest.php
+++ b/core/modules/node/tests/src/Functional/NodeRSSContentTest.php
@@ -105,4 +105,39 @@ public function testUrlHandling() {
     $this->assertRaw($absolute_url, 'Absolute URL is left untouched.');
   }
 
+  /**
+   * Tests root-relative URL for a feed in the render cache without page cache.
+   */
+  public function testUrlHandlingWithoutPageCache() {
+    $this->container->get('module_installer')->uninstall(['dynamic_page_cache']);
+    $this->rebuildAll();
+
+    // Only the plain_text text format is available by default, which escapes
+    // all HTML.
+    FilterFormat::create([
+      'format' => 'full_html',
+      'name' => 'Full HTML',
+      'filters' => [],
+    ])->save();
+
+    $defaults = [
+      'type' => 'article',
+      'promote' => 1,
+    ];
+    $this->drupalCreateNode($defaults + [
+      'body' => [
+        'value' => '<p><a href="' . file_url_transform_relative(file_create_url('public://root-relative')) . '">Root-relative URL</a></p>',
+        'format' => 'full_html',
+      ],
+    ]);
+
+    $this->drupalGet('rss.xml');
+    $this->assertEquals('application/rss+xml; charset=utf-8', $this->drupalGetHeader('Content-type'));
+    $this->assertSession()->responseContains(file_create_url('public://root-relative'));
+
+    $this->drupalGet('rss.xml');
+    $this->assertEquals('application/rss+xml; charset=utf-8', $this->drupalGetHeader('Content-type'));
+    $this->assertSession()->responseContains(file_create_url('public://root-relative'));
+  }
+
 }
diff --git a/core/modules/views/src/Plugin/views/display/Feed.php b/core/modules/views/src/Plugin/views/display/Feed.php
index c664c05..97c8777 100644
--- a/core/modules/views/src/Plugin/views/display/Feed.php
+++ b/core/modules/views/src/Plugin/views/display/Feed.php
@@ -56,6 +56,7 @@ public static function buildResponse($view_id, $display_id, array $args = []) {
     // Content-Type header.
     $response = new CacheableResponse('', 200);
     $build['#response'] = $response;
+    $build['#cache_properties'][] = '#response';
 
     /** @var \Drupal\Core\Render\RendererInterface $renderer */
     $renderer = \Drupal::service('renderer');
@@ -66,6 +67,7 @@ public static function buildResponse($view_id, $display_id, array $args = []) {
       throw new NotFoundHttpException();
     }
 
+    $response->headers = $build['#response']->headers;
     $response->setContent($output);
     $cache_metadata = CacheableMetadata::createFromRenderArray($build);
     $response->addCacheableDependency($cache_metadata);

{#
/**
 *
 * @file
 * Default theme implementation for a single field in a view.
 *
 * Available variables:
 * - view: The view that the field belongs to.
 * - field: The field handler that can process the input.
 * - row: The raw result of the database query that generated this field.
 * - output: The processed output that will normally be used.
 *
 * When fetching output from the row this construct should be used:
 * data = row[field.field_alias]
 *
 * The above will guarantee that you'll always get the correct data, regardless
 * of any changes in the aliasing that might happen if the view is modified.
 *
 * @see template_preprocess_views_view_field()
 *
 * @ingroup themeable
 */
#}

{% set displayTitle = markup_title %}

{% if view.field.body.original_value %}
	{{- displayTitle -}}
{% elseif view.field.field_media_file.original_value is not empty %}
  {% set fileUrl = view.field.field_media_file.original_value.__toString() %}
  {% set fileExt = view.field.field_media_file.original_value.__toString()|split('.')|last|upper %}
  <a href="{{ fileUrl }}">
		{{ displayTitle|render|striptags }} ({{ fileExt }})</a>
{% else %}
		{{- displayTitle -}}
{% endif %}
<br/>
<span class="abstract">{{- view.field.field_description_abstract.original_value -}}</span>
